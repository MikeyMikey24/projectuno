import { db } from '@/firebase/config';
import { Button, Center,  Heading, HStack, Img, Input, InputGroup, InputRightElement, Switch, useToast, VStack, } from '@chakra-ui/react'
import { CollectionReference, doc, DocumentData, setDoc, } from 'firebase/firestore';
import Head from 'next/head'
import  Router  from 'next/router'
import { useState, useContext } from "react";
export default function Signup(){
    const [show, setShow] = useState(false);
    const [dark, setDark] = useState(false);
    const [username, setUsername] = useState("");
    const [password, setPassword] = useState("");
    const [emailAddress, setEmailAddress] = useState("");
    const [firstName, setFirstName] = useState("");
    const [lastName, setLastName] = useState("");
    const [birthDate, setBirthDate] = useState("");
    const toast = useToast();

    let logo = '/projectUNO.png'


async function signup(){
  const docRef = await setDoc(doc(db, "user", emailAddress), {
    username: username,
    password: password,
    email_address: emailAddress,
    first_name: firstName,
    last_name: lastName,
    full_name: firstName+' '+lastName,
    birth_date: birthDate,
    
  });

  toast({
    title: "Account created.",
    description: "Successful",
    status: "success",
    duration: 2500,
    isClosable: true,
    position: "bottom-right",
  });

  setUsername("");
  setPassword("");
  setEmailAddress("");
  Router.push({ pathname: "/" })
}

    return(
        <>
        <Head>
            <title>Signup</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
      <VStack
      color = {dark ? 'white':'black'} 
      bgImg= {dark? "/DarkMode.jpg": "/LightMode.jpg"}
      bgSize="100%"
      width="100%"
      height="100vh"
      >
      <HStack 
      mt='8'
      justifyContent={"space-between"}
      spacing="1000"
      >
        <HStack justifyContent={'flex-start'}
      >
        <Img    
          h='50'
          w='15vh'
          src = {logo}/>

        <Switch
                  paddingTop={"1"}
                  colorScheme={"teal"}
                  size={"md"}
                  onChange={() => setDark(!dark)}
                />
                <Button
          colorScheme="DarkCyan"
          onClick={() => Router.push({ pathname: "/" })}
        >
          Home
        </Button>
        
        </HStack>

        <HStack 
      justifyContent={"space-between"} 
      mt="3" 
      mr="5" >
        
        <HStack justifyContent="flex-end" spacing="5">

        <Button 
        colorScheme="darkcyan"
        onClick={() => Router.push({ pathname: "/signin" })}>
          Sign-in
          </Button>

        <Button
          colorScheme="DarkCyan"
          onClick={() => Router.push({ pathname: "/signup" })}>
          Sign-up
        </Button>
          </HStack>
        </HStack>
      </HStack>


    <Center>
        <VStack 
        ml='-20'
        paddingTop='50'>
            <Input 
            onChange={(value) => setUsername(value.target.value)}
            placeholder='Username' />
            <InputGroup size='md'>
            <Input
            onChange={(value) => setPassword(value.target.value)}
              pr='4.5rem'
              type={show ? 'text' : 'password'}
              placeholder='Enter password'
              />
      <InputRightElement width='4.5rem'>
      <Switch
        paddingTop={"1"}
        colorScheme={"teal"}
        size={"md"}
        onChange={() => setShow(!show)}
        
      />
      </InputRightElement>
      </InputGroup>   
        <HStack>            
          <Input
            onChange={(value) => setFirstName(value.target.value)}
            placeholder='First Name' />
          <Input
            onChange={(value) => setLastName(value.target.value)}
            placeholder='Last Name' />
            </HStack>

            <Input 
            onChange={(value) => setEmailAddress(value.target.value)}
            placeholder='Email Address' />
            
            <Input
            onChange={(value) => setBirthDate(value.target.value)}
            type = 'date'/>
         


        <Button
        
          colorScheme="DarkCyan"
          onClick={() => {
            signup();
          }}>
          Sign-up
          
        </Button>

        </VStack>
    </Center>
    </VStack>
    </>
    );
}
